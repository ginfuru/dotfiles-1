#!/usr/bin/env bash

###############################################################################
# Variables
###############################################################################
SETUP_ROOT=$HOME/.setup

DIRECTORIES=(
    $HOME/@Inbox
    $HOME/@Inbox/@Apps
    $HOME/@Inbox/@Audio
    $HOME/@Inbox/@Documents
    $HOME/@Inbox/@Folders
    $HOME/@Inbox/@Images
    $HOME/@Inbox/@Misc
    $HOME/@Inbox/@Movies
    $HOME/@Inbox/@Screenshots
    $HOME/@Inbox/@Zips
    $HOME/@Projects
    $HOME/@Resources
    $HOME/@Resources/@GIFs
    $HOME/@Resources/@fonts
    $HOME/@Talks
)

EMOJIONE_URL="https://github.com/emojione/emojione-assets/releases/download/3.1.2/emojione-apple.ttf"

NERDFONTS_RELEASE=$(curl -L -s -H 'Accept: application/json' https://github.com/ryanoasis/nerd-fonts/releases/latest)
NERDFONTS_VERSION=$(get_github_version $NERDFONTS_RELEASE)

SLAY_SCREENSHOTS="$HOME/@Inbox/@Screenshots"
SLAY_HOSTNAME="Peppermint"

NERDFONTS=(
    SpaceMono
    Hack
    AnonymousPro
    Inconsolata
)

###############################################################################
# Customizations
###############################################################################

step "Making directories…"
for dir in ${DIRECTORIES[@]}; do
    mkd $dir
done

if [[ $(cli_is_installed fileicon) == 1 ]]; then
	echo "${indent}  ︎︎❤︎ Customizing folder icons…"
	fileicon set $HOME/@Inbox $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/download-folder.png
	fileicon set $HOME/@Inbox/@Apps $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/heart-folder.png
	fileicon set $HOME/@Inbox/@Audio $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/music-folder.png
	fileicon set $HOME/@Inbox/@Documents $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/documents-folder.png
	fileicon set $HOME/@Inbox/@Folders $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/star-folder.png
	fileicon set $HOME/@Inbox/@Images $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/photos-folder.png
	fileicon set $HOME/@Inbox/@Misc $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/bin-folder.png
	fileicon set $HOME/@Inbox/@Movies $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/video-folder.png
	fileicon set $HOME/@Inbox/@Screenshots $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/screenshots-folder.png
	fileicon set $HOME/@Inbox/@Zips $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/smile-folder.png
	fileicon set $HOME/@Projects $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/crown-folder.png
	fileicon set $HOME/@Resources $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/sparkles-folder.png
	fileicon set $HOME/@Resources/@fonts $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/type-folder.png
	fileicon set $HOME/@Resources/@GIFs $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/video-folder.png
	fileicon set $HOME/@Talks $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/talks-folder.png

	if [ -d "$HOME/Dropbox" ]; then
		fileicon set $HOME/Dropbox/@financial $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/money-folder.png
		fileicon set $HOME/Dropbox/@legacy $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/heart-folder.png
		fileicon set $HOME/Dropbox/@legal $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/doodle-folder.png
		fileicon set $HOME/Dropbox/@medical $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/sparkles-folder.png
		fileicon set $HOME/Dropbox/apps $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/download-folder.png
		fileicon set $HOME/Dropbox/brag.file $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/crown-folder.png
		fileicon set $HOME/Dropbox/documents $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/documents-folder.png
		fileicon set $HOME/Dropbox/front.porch $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/smile-folder.png
		fileicon set $HOME/Dropbox/learning $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/z-js-folder.png
		fileicon set $HOME/Dropbox/personal $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/calligraphy-folder.png
		fileicon set $HOME/Dropbox/Photos $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/photos-folder.png
		fileicon set $HOME/Dropbox/projects $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/code-folder.png
		fileicon set $HOME/Dropbox/resources $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/type-folder.png
		fileicon set $HOME/Dropbox/shared $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/star-folder.png
		fileicon set $HOME/Dropbox/speaking $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/talks-folder.png
		fileicon set $HOME/Dropbox/the.setup $SETUP_ROOT/icons/folders--gradient/downloads/icon-folders/home-folder.png
	fi

	print_in_green "${bold}✓ done!${normal}\n"
else
	print_error "fileicon must be installed! Skipping."
fi


step "Symlinking files…"
symlink_dotfiles
printf "\n"

step "Customizing Mac…"
if [ $HOSTNAME != $SLAY_HOSTNAME ]; then
    printf "${indent}    ❤︎ Setting computer name… "
    scutil --set ComputerName $SLAY_HOSTNAME && \
    scutil --set HostName $SLAY_HOSTNAME && \
    scutil --set LocalHostName $SLAY_HOSTNAME
    print_in_green "${bold}✓ done!${normal}\n"
else
    print_muted "${indent}✓ Computer name already set. Skipped."
fi

echo "${indent}  ︎︎❤︎ Showing hidden files…"
defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder

echo "${indent}  ︎︎❤︎ Configuring screenshots…"
defaults write com.apple.screencapture type jpg
defaults write com.apple.screencapture location $SLAY_SCREENSHOTS
killall SystemUIServer

step "Switching emojis to EmojiOne…"
if [ ! -f ~/Library/Fonts/emojione-apple.ttf ]; then
    printf "${indent}  [↓] EmojiOne "
    wget -P ~/Library/Fonts $EMOJIONE_URL --quiet
    print_in_green "${bold}✓ done!${normal}\n"
else
    print_muted "${indent}✓ EmojiOne already installed. Skipped."
fi

step "Installing fonts…"
for font in ${NERDFONTS[@]}; do
    if [ ! -d ~/Library/Fonts/$font ]; then
        printf "${indent}  [↓] $font "
        wget -P ~/Library/Fonts https://github.com/ryanoasis/nerd-fonts/releases/download/$NERDFONTS_VERSION/$font.zip --quiet;unzip -q ~/Library/Fonts/$font -d ~/Library/Fonts/$font
        print_in_green "${bold}✓ done!${normal}\n"
    else
        print_muted "${indent}✓ $font already installed. Skipped."
    fi
done

###############################################################################
# OPTIONAL: Follow-ups
###############################################################################
title "Next steps…"
todo "Complete setup checklist: ${bold}https://github.com/minamarkham/setup/blob/master/checklist.md${reset}"
